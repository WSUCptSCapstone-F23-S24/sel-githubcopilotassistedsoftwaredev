Func: gcd returns type int [line: 2]
.   Child: 0  Parm: u of type int [line: 2]
.   Sibling: 1  Parm: v of type int [line: 2]
.   Child: 1  If [line: 2]
.   .   Child: 0  Op: == [line: 2]
.   .   .   Child: 0  Id: v [line: 2]
.   .   .   Child: 1  Const of type int: 0 [line: 2]
.   .   Child: 1  Return [line: 2]
.   .   .   Child: 0  Id: u [line: 2]
.   .   Child: 2  Return [line: 2]
.   .   .   Child: 0  Call: gcd [line: 2]
.   .   .   .   Child: 0  Id: v [line: 2]
.   .   .   .   Sibling: 1  Op: - [line: 2]
.   .   .   .   .   Child: 0  Id: u [line: 2]
.   .   .   .   .   Child: 1  Op: * [line: 2]
.   .   .   .   .   .   Child: 0  Op: / [line: 2]
.   .   .   .   .   .   .   Child: 0  Id: u [line: 2]
.   .   .   .   .   .   .   Child: 1  Id: v [line: 2]
.   .   .   .   .   .   Child: 1  Id: v [line: 2]
Sibling: 1  Func: main returns type void [line: 4]
.   Child: 1  Compound [line: 5]
.   .   Child: 1  Call: output [line: 6]
.   .   .   Child: 0  Call: gcd [line: 6]
.   .   .   .   Child: 0  Call: input [line: 6]
.   .   .   .   Sibling: 1  Call: input [line: 6]
