Var: s of type int [line: 2]
.   Child: 0  Id: s [line: 2]
Sibling: 1  Var: t of type char [line: 3]
.   Child: 0  Const of type char: 'A' [line: 3]
Sibling: 2  Var: u of type char [line: 3]
.   Child: 0  Const of type char: 'Z' [line: 3]
Sibling: 3  Func: main returns type void [line: 5]
.   Child: 1  Compound [line: 5]
.   .   Child: 0  Var: i of type int [line: 6]
.   .   .   Child: 0  Const of type int: 666 [line: 6]
.   .   Sibling: 1  Var: a of type int [line: 7]
.   .   .   Child: 0  Const of type int: 666 [line: 7]
.   .   Sibling: 2  Var: y of type char [line: 8]
.   .   .   Child: 0  Const of type char: 'a' [line: 8]
.   .   Sibling: 3  Var: b is array of type char [line: 8]
.   .   .   Child: 0  Const of type char: 'x' [line: 8]
.   .   Sibling: 4  Var: x is array of type int [line: 9]
.   .   Sibling: 5  Var: k of type int [line: 10]
.   .   .   Child: 0  Op: + [line: 10]
.   .   .   .   Child: 0  Op: * [line: 10]
.   .   .   .   .   Child: 0  Const of type int: 4 [line: 10]
.   .   .   .   .   Child: 1  Const of type int: 5 [line: 10]
.   .   .   .   Child: 1  Const of type int: 3 [line: 10]
.   .   Sibling: 6  Var: lenx of type int [line: 10]
.   .   .   Child: 0  Op: SIZEOF [line: 10]
.   .   .   .   Child: 0  Id: x [line: 10]
.   .   Sibling: 7  Var: ba of type bool [line: 11]
.   .   .   Child: 0  Const of type bool: true [line: 11]
.   .   Sibling: 8  Var: bb of type bool [line: 11]
.   .   .   Child: 0  Op: AND [line: 11]
.   .   .   .   Child: 0  Const of type bool: true [line: 11]
.   .   .   .   Child: 1  Op: NOT [line: 11]
.   .   .   .   .   Child: 0  Const of type bool: false [line: 11]
.   .   Sibling: 9  Var: bc of type bool [line: 11]
.   .   .   Child: 0  Op: > [line: 11]
.   .   .   .   Child: 0  Const of type int: 5 [line: 11]
.   .   .   .   Child: 1  Const of type int: 4 [line: 11]
.   .   Sibling: 10  Var: ca of type char [line: 12]
.   .   .   Child: 0  Const of type char: 'a' [line: 12]
.   .   Child: 1  Assign: = [line: 14]
.   .   .   Child: 0  Op: [ [line: 14]
.   .   .   .   Child: 0  Id: x [line: 14]
.   .   .   .   Child: 1  Const of type int: 1 [line: 14]
.   .   .   Child: 1  Const of type int: 111 [line: 14]
.   .   Sibling: 1  Assign: = [line: 15]
.   .   .   Child: 0  Id: a [line: 15]
.   .   .   Child: 1  Op: SIZEOF [line: 15]
.   .   .   .   Child: 0  Id: b [line: 15]
.   .   Sibling: 2  While [line: 16]
.   .   .   Child: 0  Op: < [line: 16]
.   .   .   .   Child: 0  Id: i [line: 16]
.   .   .   .   Child: 1  Const of type int: 10 [line: 16]
.   .   .   Child: 1  Compound [line: 16]
.   .   .   .   Child: 0  Var: y is array of type int [line: 17]
.   .   .   .   Sibling: 1  Var: t of type bool [line: 18]
.   .   .   .   Child: 1  If [line: 19]
.   .   .   .   .   Child: 0  Id: t [line: 19]
.   .   .   .   .   Child: 1  Break [line: 19]
.   .   .   .   Sibling: 1  If [line: 20]
.   .   .   .   .   Child: 0  Id: t [line: 20]
.   .   .   .   .   Child: 1  Break [line: 20]
.   .   .   .   .   Child: 2  Return [line: 20]
.   .   .   .   Sibling: 2  Assign: = [line: 21]
.   .   .   .   .   Child: 0  Op: [ [line: 21]
.   .   .   .   .   .   Child: 0  Id: y [line: 21]
.   .   .   .   .   .   Child: 1  Const of type int: 2 [line: 21]
.   .   .   .   .   Child: 1  Const of type int: 222 [line: 21]
.   .   Sibling: 3  Compound [line: 23]
.   .   .   Child: 1  Compound [line: 24]
.   .   .   .   Child: 0  Var: z is array of type int [line: 25]
.   .   .   .   Child: 1  Assign: = [line: 26]
.   .   .   .   .   Child: 0  Op: [ [line: 26]
.   .   .   .   .   .   Child: 0  Id: z [line: 26]
.   .   .   .   .   .   Child: 1  Const of type int: 3 [line: 26]
.   .   .   .   .   Child: 1  Const of type int: 333 [line: 26]
.   .   Sibling: 4  Call: output [line: 29]
.   .   .   Child: 0  Const of type int: 666 [line: 29]
