Var: fahrenheit of type int [line: 2]
.   Child: 0  Const of type int: 451 [line: 2]
Sibling: 1  Func: carbon returns type int [line: 4]
.   Child: 1  Return [line: 4]
.   .   Child: 0  Const of type int: 6 [line: 4]
Sibling: 2  Func: fred returns type void [line: 6]
.   Child: 0  Parm: a of type int [line: 6]
.   Sibling: 1  Parm: b of type int [line: 6]
.   Sibling: 2  Parm: c of type char [line: 6]
.   Sibling: 3  Parm: d is array of type char [line: 6]
.   Sibling: 4  Parm: e of type bool [line: 6]
.   Sibling: 5  Parm: f is array of type bool [line: 6]
.   Child: 1  Compound [line: 6]
.   .   Child: 1  For [line: 7]
.   .   .   Child: 0  Var: x of type int [line: 7]
.   .   .   Child: 1  Range [line: 7]
.   .   .   .   Child: 0  Const of type int: 1 [line: 7]
.   .   .   .   Child: 1  Const of type int: 10 [line: 7]
.   .   .   .   Child: 2  Const of type int: 3 [line: 7]
.   .   .   Child: 2  Compound [line: 7]
.   .   .   .   Child: 1  While [line: 8]
.   .   .   .   .   Child: 0  Op: > [line: 8]
.   .   .   .   .   .   Child: 0  Id: x [line: 8]
.   .   .   .   .   .   Child: 1  Const of type int: 3 [line: 8]
.   .   .   .   .   Child: 1  Compound [line: 8]
.   .   .   .   .   .   Child: 1  If [line: 9]
.   .   .   .   .   .   .   Child: 0  Op: < [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id: x [line: 9]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 5 [line: 9]
.   .   .   .   .   .   .   Child: 1  Return [line: 9]
.   .   .   .   .   .   .   Child: 2  Break [line: 10]
.   .   .   .   .   .   Sibling: 1  If [line: 11]
.   .   .   .   .   .   .   Child: 0  Const of type bool: true [line: 11]
.   .   .   .   .   .   .   Child: 1  If [line: 11]
.   .   .   .   .   .   .   .   Child: 0  Op: == [line: 11]
.   .   .   .   .   .   .   .   .   Child: 0  Id: c [line: 11]
.   .   .   .   .   .   .   .   .   Child: 1  Const of type char: 'a' [line: 11]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 666 [line: 11]
.   .   .   .   .   .   .   .   Child: 2  Const of type int: 777 [line: 11]
.   .   .   .   .   .   Sibling: 2  Assign: = [line: 12]
.   .   .   .   .   .   .   Child: 0  Id: a [line: 12]
.   .   .   .   .   .   .   Child: 1  Assign: += [line: 12]
.   .   .   .   .   .   .   .   Child: 0  Id: b [line: 12]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 3 [line: 12]
.   .   .   .   .   .   Sibling: 3  Assign: *= [line: 13]
.   .   .   .   .   .   .   Child: 0  Id: a [line: 13]
.   .   .   .   .   .   .   Child: 1  Assign: /= [line: 13]
.   .   .   .   .   .   .   .   Child: 0  Id: b [line: 13]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 4 [line: 13]
.   .   .   .   .   .   Sibling: 4  Assign: ++ [line: 14]
.   .   .   .   .   .   .   Child: 0  Id: a [line: 14]
.   .   .   .   .   .   Sibling: 5  Assign: = [line: 15]
.   .   .   .   .   .   .   Child: 0  Id: e [line: 15]
.   .   .   .   .   .   .   Child: 1  Op: OR [line: 15]
.   .   .   .   .   .   .   .   Child: 0  Const of type bool: true [line: 15]
.   .   .   .   .   .   .   .   Child: 1  Op: AND [line: 15]
.   .   .   .   .   .   .   .   .   Child: 0  Const of type bool: false [line: 15]
.   .   .   .   .   .   .   .   .   Child: 1  Op: NOT [line: 15]
.   .   .   .   .   .   .   .   .   .   Child: 0  Const of type bool: false [line: 15]
.   .   .   .   .   .   Sibling: 6  Assign: = [line: 16]
.   .   .   .   .   .   .   Child: 0  Id: a [line: 16]
.   .   .   .   .   .   .   Child: 1  Op: :<: [line: 16]
.   .   .   .   .   .   .   .   Child: 0  Op: :>: [line: 16]
.   .   .   .   .   .   .   .   .   Child: 0  Id: a [line: 16]
.   .   .   .   .   .   .   .   .   Child: 1  Id: b [line: 16]
.   .   .   .   .   .   .   .   Child: 1  Id: c [line: 16]
.   .   .   .   .   .   Sibling: 7  Assign: -= [line: 17]
.   .   .   .   .   .   .   Child: 0  Id: b [line: 17]
.   .   .   .   .   .   .   Child: 1  Op: % [line: 17]
.   .   .   .   .   .   .   .   Child: 0  Op: / [line: 17]
.   .   .   .   .   .   .   .   .   Child: 0  Op: * [line: 17]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: a [line: 17]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: b [line: 17]
.   .   .   .   .   .   .   .   .   Child: 1  Const of type int: 5 [line: 17]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 13 [line: 17]
.   .   .   .   .   .   Sibling: 8  Assign: -- [line: 18]
.   .   .   .   .   .   .   Child: 0  Id: b [line: 18]
.   .   .   .   .   .   Sibling: 9  Op: CHSIGN [line: 19]
.   .   .   .   .   .   .   Child: 0  Op: CHSIGN [line: 19]
.   .   .   .   .   .   .   .   Child: 0  Id: b [line: 19]
.   .   .   .   .   .   Sibling: 10  Op: ? [line: 20]
.   .   .   .   .   .   .   Child: 0  Op: SIZEOF [line: 20]
.   .   .   .   .   .   .   .   Child: 0  Id: f [line: 20]
.   .   .   .   .   .   Sibling: 11  Op: + [line: 21]
.   .   .   .   .   .   .   Child: 0  Op: [ [line: 21]
.   .   .   .   .   .   .   .   Child: 0  Id: e [line: 21]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 5 [line: 21]
.   .   .   .   .   .   .   Child: 1  Op: [ [line: 21]
.   .   .   .   .   .   .   .   Child: 0  Id: e [line: 21]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 6 [line: 21]
.   .   .   .   .   .   Sibling: 12  Op: [ [line: 22]
.   .   .   .   .   .   .   Child: 0  Id: e [line: 22]
.   .   .   .   .   .   .   Child: 1  Op: [ [line: 22]
.   .   .   .   .   .   .   .   Child: 0  Id: e [line: 22]
.   .   .   .   .   .   .   .   Child: 1  Const of type int: 0 [line: 22]
.   .   .   .   .   .   Sibling: 13  Assign: = [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: c [line: 23]
.   .   .   .   .   .   .   Child: 1  Const of type char: 'x' [line: 23]
.   .   .   .   .   .   Sibling: 14  Assign: = [line: 24]
.   .   .   .   .   .   .   Child: 0  Id: d [line: 24]
.   .   .   .   .   .   .   Child: 1  Const is array of type char: "horses" [line: 24]
.   .   .   .   .   .   Sibling: 15  Call: carbon [line: 25]
.   .   .   .   .   .   Sibling: 16  Return [line: 26]
.   .   Sibling: 1  For [line: 29]
.   .   .   Child: 0  Var: i of type int [line: 29]
.   .   .   Child: 1  Range [line: 29]
.   .   .   .   Child: 0  Const of type int: 1 [line: 29]
.   .   .   .   Child: 1  Const of type int: 107 [line: 29]
.   .   .   Child: 2  Compound [line: 29]
.   .   .   .   Child: 0  Var: x of type int [line: 29]
Sibling: 3  Func: main returns type void [line: 32]
.   Child: 1  Compound [line: 32]
.   .   Child: 0  Var: a of type int [line: 33]
.   .   Sibling: 1  Var: b is array of type int [line: 33]
.   .   Sibling: 2  Var: c of type char [line: 34]
.   .   Sibling: 3  Var: d is array of type char [line: 34]
.   .   Sibling: 4  Var: e of type bool [line: 35]
.   .   Sibling: 5  Var: f is array of type bool [line: 35]
.   .   Sibling: 6  Var: g of type int [line: 36]
.   .   Child: 1  Call: fred [line: 37]
.   .   .   Child: 0  Const of type int: 101 [line: 37]
.   .   .   Sibling: 1  Id: b [line: 37]
.   .   .   Sibling: 2  Const of type char: 'q' [line: 37]
.   .   .   Sibling: 3  Id: d [line: 37]
.   .   .   Sibling: 4  Id: e [line: 37]
.   .   .   Sibling: 5  Id: f [line: 37]
